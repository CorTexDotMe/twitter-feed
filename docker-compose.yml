services:
  kafka:
    restart: always
    image: bitnami/kafka:3.3
    networks:
      - kafkanet
    volumes:
      - "kafka:/bitnami/kafka"
    environment:
      KAFKA_CFG_NODE_ID: 0
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

  roach1:
    image: cockroachdb/cockroach:v22.2.19
    hostname: roach1
    networks:
      - roachnet
    ports:
      - "26257:26257"
      - "8081:8081"
    command:
      - start
      - --advertise-addr=roach1:26357
      - --http-addr=roach1:8081
      - --listen-addr=roach1:26357
      - --sql-addr=roach1:26257
      - --insecure
      - --join=roach1:26357,roach2:26357,roach3:26357
    volumes:
      - "roach1:/cockroach/cockroach-data"

  roach2:
    image: cockroachdb/cockroach:v22.2.19
    hostname: roach2
    networks:
      - roachnet
    ports:
      - "26258:26258"
      - "8082:8082"
    command:
      - start
      - --advertise-addr=roach2:26357
      - --http-addr=roach2:8082
      - --listen-addr=roach2:26357
      - --sql-addr=roach2:26258
      - --insecure
      - --join=roach1:26357,roach2:26357,roach3:26357
    volumes:
      - "roach2:/cockroach/cockroach-data"

  roach3:
    image: cockroachdb/cockroach:v22.2.19
    hostname: roach3
    networks:
      - roachnet
    ports:
      - "26259:26259"
      - "8083:8083"
    command:
      - start
      - --advertise-addr=roach3:26357
      - --http-addr=roach3:8083
      - --listen-addr=roach3:26357
      - --sql-addr=roach3:26259
      - --insecure
      - --join=roach1:26357,roach2:26357,roach3:26357
    volumes:
      - "roach3:/cockroach/cockroach-data"

  server:
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
    networks:
      - roachnet
      - kafkanet
    ports:
      - "8888:8888"
    environment:
      SERVER_PORT: 8888
      DB_HOST: "roach1"
      DB_PORT: 26257
      DB_USER: "root"
      DB_NAME: "twitterdb"
      KAFKA_URL: "kafka:9092"
      KAFKA_GROUP: "message-group"
      KAFKA_TOPIC: "messages"

  message-consumer:
    restart: always
    build:
      context: .
      dockerfile: cmd/message-consumer/Dockerfile
    networks:
      - roachnet
      - kafkanet
    environment:
      SERVER_PORT: 8888
      DB_HOST: "roach1"
      DB_PORT: 26257
      DB_USER: "root"
      DB_NAME: "twitterdb"
      KAFKA_URL: "kafka:9092"
      KAFKA_GROUP: "message-group"
      KAFKA_TOPIC: "messages"

volumes:
  kafka:
  roach1:
  roach2:
  roach3:


networks:
  roachnet:
    driver: bridge
  kafkanet:
    driver: bridge
